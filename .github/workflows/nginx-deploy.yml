name: 엔진엑스 서버 배포

on:
  push:
    paths:
      - "nginx/**" # nginx 폴더 내의 파일이 변경될 때만 실행

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v3
      
      - name: 환경 변수 로드
        id: load-env
        run: |
          echo "${{ secrets.NGINX_SERVER_ENV }}" | while IFS= read -r line; do
            # 주석과 빈 줄 무시
            if [[ -n "$line" && "$line" != \#* ]]; then
              echo "$line" >> $GITHUB_ENV
            fi
          done

      - name: nginx 폴더 생성(있으면 무시)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.NGINX_SERVER_EC2_HOST }}
          username: ${{ env.NGINX_SERVER_EC2_USERNAME }}
          key: ${{ secrets.NGINX_SERVER_EC2_PRIVATE_KEY }}
          script: |
            mkdir -p ~/nginx

      - name: nginx폴더내용 ec2서버 nginx폴더에 업로드
        uses: appleboy/scp-action@master
        with:
          host: ${{ env.NGINX_SERVER_EC2_HOST }}
          username: ${{ env.NGINX_SERVER_EC2_USERNAME }}
          key: ${{ secrets.NGINX_SERVER_EC2_PRIVATE_KEY }}
          source: "nginx/*"
          target: "~/"

      - name: 도커 컴포즈 실행
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.NGINX_SERVER_EC2_HOST }}
          username: ${{ env.NGINX_SERVER_EC2_USERNAME }}
          key: ${{ secrets.NGINX_SERVER_EC2_PRIVATE_KEY }}
          script: |
            docker image prune -a -f --filter "until=12h"
            # React01 환경변수
            export REACT_SERVER01_EC2_PROTOCOL=${{ env.REACT_SERVER01_EC2_PROTOCOL }}
            export REACT_SERVER01_EC2_HOST=${{ env.REACT_SERVER01_EC2_HOST }}
            export REACT_SERVER01_EC2_PORT=${{ env.REACT_SERVER01_EC2_PORT }}
            # Express01 환경변수
            export EXPRESS_SERVER01_EC2_PROTOCOL=${{ env.EXPRESS_SERVER01_EC2_PROTOCOL }}
            export EXPRESS_SERVER01_EC2_HOST=${{ env.EXPRESS_SERVER01_EC2_HOST }}
            export EXPRESS_SERVER01_EC2_PORT=${{ env.EXPRESS_SERVER01_EC2_PORT }}
            # 도커 컴포즈 실행
            cd nginx
            sudo -E docker-compose pull express 
            sudo -E docker-compose up -d express  
            sudo -E docker-compose logs express