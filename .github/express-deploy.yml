name: Epxress 백엔드 서버 배포

on:
  push:
    paths:
      - "express/**" # express 폴더 내의 파일이 변경될 때만 실행

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v2

      - name: Node 설치
        uses: actions/setup-node@v2
        with:
          node-version: "20.14.0"

      - name: 의존성 설치
        run: npm install

      - name: 테스트 실행
        env:
          # 데이터베이스 환경변수
          DATABASE_URL: ${{ secrets.EXPRESS_SERVER01_DATABASE_URL }}
          REDIS_URL: ${{ secrets.EXPRESS_SERVER01_REDIS_URL }}
          REDIS_PORT: ${{ secrets.EXPRESS_SERVER01_REDIS_PORT }}
          REDIS_PASSWORD: ${{ secrets.EXPRESS_SERVER01_REDIS_PASSWORD }}
          # JWT 환경변수
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          JWT_ACCESS_TOKEN_EXPIRATION: ${{ secrets.JWT_ACCESS_TOKEN_EXPIRATION }}
          JWT_REFRESH_TOKEN_EXPIRATION: ${{ secrets.JWT_REFRESH_TOKEN_EXPIRATION }}
        run: npm test

      - name: Docker Buildx 설정
        uses: docker/setup-buildx-action@v1

      - name: Docker Hub 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Docker image 빌드 & 푸쉬
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/jm-total-hub:express-latest

      - name: express 폴더 생성(있으면 무시)
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EXPRESS_SERVER01_EC2_HOST }}
          username: ${{ secrets.EXPRESS_SERVER01_EC2_USERNAME }}
          key: ${{ secrets.EXPRESS_SERVER01_EC2_PRIVATE_KEY }}
          script: |
            mkdir -p ~/express

      - name: express폴더내용 ec2서버 express폴더에 업로드 (최신화)
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EXPRESS_SERVER01_EC2_HOST }}
          username: ${{ secrets.EXPRESS_SERVER01_EC2_USERNAME }}
          key: ${{ secrets.EXPRESS_SERVER01_EC2_PRIVATE_KEY }}
          source: "express/*"
          target: "~/express/"

      - name: EC2 배포
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EXPRESS_SERVER01_EC2_HOST }}
          username: ${{ secrets.EXPRESS_SERVER01_EC2_USERNAME }}
          key: ${{ secrets.EXPRESS_SERVER01_EC2_PRIVATE_KEY }}
          script: |
            docker image prune -a -f --filter "until=12h"
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
            # 데이터베이스 환경변수
            export DATABASE_URL=${{ secrets.EXPRESS_SERVER01_DATABASE_URL }}
            export REDIS_URL=${{ secrets.EXPRESS_SERVER01_REDIS_URL }}
            export REDIS_PORT=${{ secrets.EXPRESS_SERVER01_REDIS_PORT }}
            export REDIS_PASSWORD=${{ secrets.EXPRESS_SERVER01_REDIS_PASSWORD }}
            # JWT 환경변수
            export JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
            export JWT_ACCESS_TOKEN_EXPIRATION=${{ secrets.JWT_ACCESS_TOKEN_EXPIRATION }}
            export JWT_REFRESH_TOKEN_EXPIRATION=${{ secrets.JWT_REFRESH_TOKEN_EXPIRATION }}
            cd JMTotalHub-DockerCompose
            sudo -E docker-compose pull express 
            sudo -E docker-compose up -d express  
            sudo -E docker-compose logs express
